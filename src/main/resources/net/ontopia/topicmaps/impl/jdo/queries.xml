<?xml version="1.0" encoding="UTF-8"?>
<queries name="default" defaultPackage="net.ontopia.topicmaps.impl.jdo">
	
	<!-- TopicMap -->
	
	<query name="TopicMap.getTopicBySubjectIdentifier">
		<class>IdentityLocator</class>
		<parameters>TopicMap tm, String locator</parameters>
		<filter><![CDATA[
			address == locator && topicmap == tm && type == IdentityLocator.SUBJECT_IDENTIFIER
		]]></filter>
		<range-min>0</range-min>
		<range-max>1</range-max>
	</query>
	
	<query name="TopicMap.getTopicBySubjectLocator">
		<class>SubjectLocator</class>
		<parameters>TopicMap tm, String locator</parameters>
		<filter><![CDATA[
			address == locator && topicmap == tm
		]]></filter>
		<range-min>0</range-min>
		<range-max>1</range-max>
	</query>
	
	<query name="TopicMap.getObjectByItemIdentifier">
		<class>IdentityLocator</class>
		<parameters>TopicMap tm, String locator</parameters>
		<filter><![CDATA[
			address == locator && topicmap == tm && type == IdentityLocator.ITEM_IDENTIFIER
		]]></filter>
		<range-min>0</range-min>
		<range-max>1</range-max>
	</query>
	
	<query name="TopicMap.getObjectByIdentifier">
		<class>IdentityLocator</class>
		<parameters>TopicMap tm, String locator</parameters>
		<filter><![CDATA[
			address == locator && topicmap == tm
		]]></filter>
		<range-min>0</range-min>
		<range-max>1</range-max>
	</query>
	
	<!-- Association -->
	
	<query name="Association.getRoleTypes">
		<class>AssociationRole</class>
		<parameters>TopicMap tm, Association assoc</parameters>
		<filter><![CDATA[
			association == assoc && topicmap == tm
		]]></filter>
		<result>distinct type</result>
	</query>
	
	<query name="Association.getRolesByType">
		<class>AssociationRole</class>
		<parameters>TopicMap tm, Association assoc, Topic rt</parameters>
		<filter><![CDATA[
			association == assoc && topicmap == tm && type == rt
		]]></filter>
	</query>
	
	<!-- ClassInstanceIndex -->
	
	<query name="ClassInstanceIndex.getTopics(null)">
		<class>Topic</class>
		<parameters>TopicMap tm</parameters>
		<filter><![CDATA[
			topicmap == tm && types == null
		]]></filter>
	</query>
	
	<query name="ClassInstanceIndex.getTopics">
		<class>Topic</class>
		<parameters>TopicMap tm, Topic type</parameters>
		<filter><![CDATA[
			topicmap == tm && types.contains(type)
		]]></filter>
	</query>
	
	<query name="ClassInstanceIndex.getTopicNames">
		<class>TopicName</class>
		<parameters>TopicMap tm, Topic nt</parameters>
		<filter><![CDATA[
			topicmap == tm && type == nt
		]]></filter>
	</query>
	
	<query name="ClassInstanceIndex.getOccurrences">
		<class>Occurrence</class>
		<parameters>TopicMap tm, Topic ot</parameters>
		<filter><![CDATA[
			topicmap == tm && type == ot
		]]></filter>
	</query>
	
	<query name="ClassInstanceIndex.getAssociations">
		<class>Association</class>
		<parameters>TopicMap tm, Topic at</parameters>
		<filter><![CDATA[
			topicmap == tm && type == at
		]]></filter>
	</query>
	
	<query name="ClassInstanceIndex.getAssociationRoles">
		<class>AssociationRole</class>
		<parameters>TopicMap tm, Topic rt</parameters>
		<filter><![CDATA[
			topicmap == tm && type == rt
		]]></filter>
	</query>
	
	<query name="ClassInstanceIndex.getTopicTypes">
		<class>Topic</class>
		<parameters>TopicMap tm</parameters>
		<filter><![CDATA[
			topicmap == tm && types.contains(type)
		]]></filter>
		<result>distinct type</result>
	</query>
	
	<query name="ClassInstanceIndex.getTopicNameTypes">
		<class>TopicName</class>
		<parameters>TopicMap tm</parameters>
		<filter><![CDATA[
			topicmap == tm
		]]></filter>
		<result>distinct type</result>
	</query>
	
	<query name="ClassInstanceIndex.getOccurrenceTypes">
		<class>Occurrence</class>
		<parameters>TopicMap tm</parameters>
		<filter><![CDATA[
			topicmap == tm
		]]></filter>
		<result>distinct type</result>
	</query>
	
	<query name="ClassInstanceIndex.getAssociationTypes">
		<class>Association</class>
		<parameters>TopicMap tm</parameters>
		<filter><![CDATA[
			topicmap == tm
		]]></filter>
		<result>distinct type</result>
	</query>
	
	<query name="ClassInstanceIndex.getAssociationRoleTypes">
		<class>AssociationRole</class>
		<parameters>TopicMap tm</parameters>
		<filter><![CDATA[
			topicmap == tm
		]]></filter>
		<result>distinct type</result>
	</query>
	
	<!-- ScopeIndex -->
	
	<query name="ScopeIndex.getTopicNames">
		<class>TopicName</class>
		<parameters>TopicMap tm, Topic topic</parameters>
		<filter><![CDATA[
			topicmap == tm && scope.contains(topic)
		]]></filter>
	</query>
	
	<query name="ScopeIndex.getVariants">
		<class>VariantName</class>
		<parameters>TopicMap tm, Topic topic</parameters>
		<filter><![CDATA[
			topicmap == tm && scope.contains(topic)
		]]></filter>
	</query>
	
	<query name="ScopeIndex.getOccurrences">
		<class>Occurrence</class>
		<parameters>TopicMap tm, Topic topic</parameters>
		<filter><![CDATA[
			topicmap == tm && scope.contains(topic)
		]]></filter>
	</query>
	
	<query name="ScopeIndex.getAssociations">
		<class>Association</class>
		<parameters>TopicMap tm, Topic topic</parameters>
		<filter><![CDATA[
			topicmap == tm && scope.contains(topic)
		]]></filter>
	</query>
	
	<query name="ScopeIndex.getTopicNameThemes">
		<class>TopicName</class>
		<parameters>TopicMap tm</parameters>
		<filter><![CDATA[
			topicmap == tm && scope.contains(st)
		]]></filter>
		<result>distinct st</result>
	</query>
	
	<query name="ScopeIndex.getVariantThemes">
		<class>VariantName</class>
		<parameters>TopicMap tm</parameters>
		<filter><![CDATA[
			topicmap == tm && scope.contains(st)
		]]></filter>
		<result>distinct st</result>
	</query>
	
	<query name="ScopeIndex.getOccurrenceThemes">
		<class>Occurrence</class>
		<parameters>TopicMap tm</parameters>
		<filter><![CDATA[
			topicmap == tm && scope.contains(st)
		]]></filter>
		<result>distinct st</result>
	</query>
	
	<query name="ScopeIndex.getAssociationThemes">
		<class>Association</class>
		<parameters>TopicMap tm</parameters>
		<filter><![CDATA[
			topicmap == tm && scope.contains(st)
		]]></filter>
		<result>distinct st</result>
	</query>
	
</queries>
